version: 0.0.4
jobId: "398"
jobName: Test_sample_data_state_mngt_Mansi
jobType: Source Aligned Data Product
domain: sale
alias: read4
discoveryPort:
  name: Test_sample_data_state_mngt_Mansi
inputPorts:
  - alias: weather_data_Mansi_1
    isDynamic: true
    path: s3://byte-etl-externaldemo/weather_data/20230626130122.csv
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: Mansi_S3
      dataSetUrn: urn:dv:dataset:7ea0f9b9-1b2b-4d8c-a3b6-2a68936e1ad9
    type: inputDelimited
productState:
  persistDataFrame: false
  catalogType: glue
  enforceSchema: false
  stepName: read
  tableName: select * from s3Source.weather_daily
  warehousePath: s3://bp-spark-sql-library-test-acc/
  catalogName: glue
  type: readDataIceberg
  isStateManagement: true
  sequence: 3
  alias: read
  refreshInterval: None
  retentionVersions: ""
  logicalSchema:
    properties:
      Actual:
        type: STRING
        description: ""
      Predicted:
        type: STRING
        description: ""
  enforceSchemaMethod: ""
  isProfilingEnabled: false
transformation:
  - isDynamic: true
    alias: EMR_PySpark_1
    description: Run pyspark code
    sequence: 2
    arguments:
      - s3://byte-etl-externaldemo/weather_data/20230626130122.csv
    pythonFilePath: s3://bp-spark-sql-library-test-acc/custom-jobs/CustomPythonJobWriteParquetTimeOut.py
    inputDataFrameList:
      - inputDataFrame: ""
        tempViewName: ""
    optional:
      pythonEnvTarGZPath: s3://byte-etl-externaldemo/pyspark_serverless_test/pyspark_venv.tar.gz
    type: customPySparkEMRServerless
controlPort:
  dataQualityRules: {}
outputPort:
  subscriptionChannels:
    - channelType: Postgres
      queryType: SQL
    - channelType: Dataproduct
      queryType: SQL
