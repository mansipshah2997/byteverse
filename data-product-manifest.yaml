version: 0.0.1
jobId: "1079"
jobName: test_lineage_join_Mansi_AWS
jobType: Source Aligned Data Product
developerId: a7c26b3c-3e9b-4fd9-bde8-805d1fd1697e
domain: finance
alias: write_to_postgres2
discoveryPort:
  name: test_lineage_join_Mansi_AWS
inputPorts:
  - alias: scores_s3_1
    isDynamic: true
    path: s3://byte-etl-externaldemo/demo_tmp/scores.csv
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: Mansi_S3
      dataSetUrn: urn:dv:dataset:c1315b95-4efd-4781-8529-0a741ebcd775
    type: inputDelimited
  - alias: students_s3_1
    isDynamic: true
    path: s3://byte-etl-externaldemo/demo_tmp/students.csv
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: Mansi_S3
      dataSetUrn: urn:dv:dataset:413974a8-1695-444b-9ace-872a244fa9e8
    type: inputDelimited
productState:
  isDynamic: true
  alias: write_to_postgres
  retentionVersions: ""
  logicalSchema:
    properties: {}
  stateStoreType: writeDataFrameToPostgresTable
  isProfilingEnabled: false
  updateStrategy: Overwrite
  connection: demo_postgres
  tableName: students_joined
  optional:
    persistDataFrame: false
    enableDataReconciliation: false
    enforceSchema: false
  refreshInterval: None
transformation:
  - isDynamic: true
    alias: Spark_SQL_1
    description: join query
    sequence: 3
    inputDataFrameList:
      - inputDataFrame: students_s3_1
        tempViewName: file1
      - inputDataFrame: scores_s3_1
        tempViewName: file2
    query: SELECT f1.id AS id, (f1.value + f2.score) AS calculated_column FROM file1
      f1 JOIN file2 f2 ON f1.id = f2.id
    optional:
      persistDataFrame: false
    type: operationThroughSqlQuery
controlPort:
  dataQualityRules: {}
